/* 
 * Intrinio API
 *
 * Welcome to the Intrinio API! Through our Marketplace, we offer a wide selection of financial data feeds sourced by our own proprietary processes as well as from many data vendors. The primary application of the Intrinio API is for use in third-party applications and integrations or for end-users utilizing the Excel add-in and Google Sheets add-on. The Intrinio API uses HTTPS verbs and a RESTful endpoint structure, which makes it easy to request data from Intrinio. Responses are delivered in JSON format. If you need additional help in using the API, go to our home page (https://intrinio.com) and click on the chat icon in the lower right corner.
 *
 * OpenAPI spec version: 2.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Intrinio.Api;
using Intrinio.Model;
using Intrinio.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Intrinio.Test
{
    /// <summary>
    ///  Class for testing Fundamental
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class FundamentalTests
    {
        // TODO uncomment below to declare an instance variable for Fundamental
        //private Fundamental instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Fundamental
            //instance = new Fundamental();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Fundamental
        /// </summary>
        [Test]
        public void FundamentalInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Fundamental
            //Assert.IsInstanceOfType<Fundamental> (instance, "variable 'instance' is a Fundamental");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Company'
        /// </summary>
        [Test]
        public void CompanyTest()
        {
            // TODO unit test for the property 'Company'
        }
        /// <summary>
        /// Test the property 'StatementCode'
        /// </summary>
        [Test]
        public void StatementCodeTest()
        {
            // TODO unit test for the property 'StatementCode'
        }
        /// <summary>
        /// Test the property 'FiscalYear'
        /// </summary>
        [Test]
        public void FiscalYearTest()
        {
            // TODO unit test for the property 'FiscalYear'
        }
        /// <summary>
        /// Test the property 'FiscalPeriod'
        /// </summary>
        [Test]
        public void FiscalPeriodTest()
        {
            // TODO unit test for the property 'FiscalPeriod'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'StartDate'
        /// </summary>
        [Test]
        public void StartDateTest()
        {
            // TODO unit test for the property 'StartDate'
        }
        /// <summary>
        /// Test the property 'EndDate'
        /// </summary>
        [Test]
        public void EndDateTest()
        {
            // TODO unit test for the property 'EndDate'
        }
        /// <summary>
        /// Test the property 'FilingDate'
        /// </summary>
        [Test]
        public void FilingDateTest()
        {
            // TODO unit test for the property 'FilingDate'
        }
        /// <summary>
        /// Test the property 'Calculated'
        /// </summary>
        [Test]
        public void CalculatedTest()
        {
            // TODO unit test for the property 'Calculated'
        }

    }

}
